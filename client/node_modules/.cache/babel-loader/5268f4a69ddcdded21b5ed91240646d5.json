{"ast":null,"code":"var _jsxFileName = \"/Users/leondixon/Documents/Coding/react-todo/client/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AddTask from \"./AddTask\";\nimport Tasks from \"./Tasks\";\nimport { Box, Heading, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  const [tasks, editTasks] = useState([]);\n  useEffect(() => {\n    async function getTasks() {\n      const response = await fetch('http://localhost:5001/task/');\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const tasks = await response.json();\n      editTasks(tasks);\n    }\n\n    getTasks();\n    return;\n  }, [tasks.length]);\n\n  async function addTask(text) {\n    const newTask = {\n      task_author: 'leon',\n      task_text: text\n    };\n    editTasks([...tasks, newTask]);\n    await fetch(\"http://localhost:5001/task/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTask)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n  }\n\n  async function deleteTask(id) {\n    await fetch(`http://localhost:5001/${id}`, {\n      method: 'DELETE'\n    });\n    console.log('test');\n    const newTasks = tasks.filter(task => {\n      console.log(`${task.id} ${id}`);\n      return task.id !== id;\n    });\n    editTasks(newTasks);\n  }\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    border: \"1px\",\n    borderColor: \"gray.300\",\n    borderRadius: \"lg\",\n    p: \"5\",\n    my: [\"150\"],\n    w: [\"100%\", \"300px\", \"600px\"],\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      w: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        textAlign: \"center\",\n        pb: \"3\",\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), tasks && tasks.length > 0 && /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"Io83Zct4ODWnoIMl3klaawg+wSk=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/leondixon/Documents/Coding/react-todo/client/src/components/Todo.js"],"names":["React","useState","useEffect","AddTask","Tasks","Box","Heading","VStack","Todo","tasks","editTasks","getTasks","response","fetch","ok","message","statusText","window","alert","json","length","addTask","text","newTask","task_author","task_text","method","headers","body","JSON","stringify","catch","error","deleteTask","id","console","log","newTasks","filter","task"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AddTask from \"./AddTask\";\nimport Tasks from \"./Tasks\";\nimport { Box, Heading, VStack } from \"@chakra-ui/react\";\n\nfunction Todo() {\n  const [tasks, editTasks] = useState([]);\n\n  useEffect(() => {\n      async function getTasks() {\n        const response = await fetch('http://localhost:5001/task/');\n\n        if (!response.ok){\n            const message = `An error occured: ${response.statusText}`;\n            window.alert(message);\n            return;\n        }\n\n        const tasks = await response.json();\n        editTasks(tasks); \n      }\n\n      getTasks();\n      return;\n  }, [tasks.length])\n\n  async function addTask(text) {\n    const newTask = { task_author: 'leon', task_text: text };\n    editTasks([...tasks, newTask]);\n    await fetch(\"http://localhost:5001/task/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newTask),\n    }).catch((error) => {\n      window.alert(error);\n      return;\n    });\n  }\n\n  async function deleteTask(id) {\n    await fetch(`http://localhost:5001/${id}`, {\n        method: 'DELETE'\n    })\n    console.log('test')\n    const newTasks = tasks.filter((task) => { console.log(`${task.id} ${id}`)\n    return task.id !== id; });\n    editTasks(newTasks);\n  }\n  return (\n    <VStack\n      border=\"1px\"\n      borderColor=\"gray.300\"\n      borderRadius=\"lg\"\n      p=\"5\"\n      my={[\"150\"]}\n      w={[\"100%\", \"300px\", \"600px\"]}\n    >\n      <Box w=\"100%\">\n        <Heading textAlign=\"center\" pb=\"3\">\n          Todo\n        </Heading>\n      </Box>\n      <AddTask addTask={addTask} />\n      {tasks && tasks.length > 0 && <Tasks tasks={tasks} deleteTask={deleteTask} />}\n    </VStack>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}