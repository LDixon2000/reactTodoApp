{"ast":null,"code":"var _jsxFileName = \"/Users/leondixon/Documents/Coding/react-todo/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Box, Flex, Text } from \"@chakra-ui/react\";\nimport { DeleteIcon } from \"@chakra-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(props) {\n  _s();\n\n  const {\n    deleteTask,\n    id,\n    text\n  } = props;\n  const [isCompleted, toggleCompletion] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    py: \"2\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      cursor: \"pointer\",\n      className: \"\",\n      onClick: () => toggleCompletion(!isCompleted),\n      flex: \"1 0 0\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        textDecorationLine: isCompleted ? 'line-through' : '',\n        fontSize: \"xl\",\n        whiteSpace: \"initial\",\n        children: [text, \" \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => deleteTask(id),\n        colorScheme: \"red\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"UR+j5zG0QnHMIZZ0zNNKyL6TgvA=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/leondixon/Documents/Coding/react-todo/src/components/Task.js"],"names":["React","useState","Button","Box","Flex","Text","DeleteIcon","Task","props","deleteTask","id","text","isCompleted","toggleCompletion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,IAA5B,QAAwC,kBAAxC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,EAAd;AAAkBC,IAAAA;AAAlB,MAA2BH,KAAjC;AACA,QAAM,CAACI,WAAD,EAAcC,gBAAd,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,UAAU,EAAC,QAAjB;AAA0B,IAAA,EAAE,EAAC,GAA7B;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,MAAM,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAC,EAAhC;AAAmC,MAAA,OAAO,EAAE,MAAMY,gBAAgB,CAAC,CAACD,WAAF,CAAlE;AAAkF,MAAA,IAAI,EAAC,OAAvF;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,kBAAkB,EAAEA,WAAW,GAAG,cAAH,GAAoB,EAAzD;AAA6D,QAAA,QAAQ,EAAC,IAAtE;AAA2E,QAAA,UAAU,EAAC,SAAtF;AAAA,mBAAiGD,IAAjG,OAAwGD,EAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMD,UAAU,CAACC,EAAD,CAAjC;AAAuC,QAAA,WAAW,EAAC,KAAnD;AAAA,+BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAlBQH,I;;KAAAA,I;AAoBT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Box, Flex, Text } from \"@chakra-ui/react\";\nimport { DeleteIcon } from \"@chakra-ui/icons\";\n\nfunction Task(props) {\n  const { deleteTask, id, text } = props;\n  const [isCompleted, toggleCompletion] = useState(false);\n\n  \n\n  return (\n    <Flex alignItems='center' py='2'>\n      <Box cursor='pointer' className=\"\" onClick={() => toggleCompletion(!isCompleted)} flex='1 0 0'>\n        <Text textDecorationLine={isCompleted ? 'line-through' : ''} fontSize='xl' whiteSpace='initial'>{text} {id}</Text>\n      </Box>\n      <Box>\n        <Button onClick={() => deleteTask(id)} colorScheme=\"red\">\n          <DeleteIcon />\n        </Button>\n      </Box>\n    </ Flex>\n  );\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}